/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WarningImport } from './routes/warning'
import { Route as IndexImport } from './routes/index'
import { Route as InsInsIDLayoutImport } from './routes/ins/$insID/_layout'
import { Route as InsInsIDLayoutIndexImport } from './routes/ins/$insID/_layout/index'
import { Route as InsInsIDLayoutIndexIndexUIDIndexImport } from './routes/ins/$insID/_layout/index/$indexUID/index'

// Create Virtual Routes

const InsInsIDImport = createFileRoute('/ins/$insID')()

// Create/Update Routes

const WarningRoute = WarningImport.update({
  path: '/warning',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const InsInsIDRoute = InsInsIDImport.update({
  path: '/ins/$insID',
  getParentRoute: () => rootRoute,
} as any)

const InsInsIDLayoutRoute = InsInsIDLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => InsInsIDRoute,
} as any)

const InsInsIDLayoutIndexRoute = InsInsIDLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => InsInsIDLayoutRoute,
} as any)

const InsInsIDLayoutIndexIndexUIDIndexRoute =
  InsInsIDLayoutIndexIndexUIDIndexImport.update({
    path: '/index/$indexUID/',
    getParentRoute: () => InsInsIDLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/warning': {
      id: '/warning'
      path: '/warning'
      fullPath: '/warning'
      preLoaderRoute: typeof WarningImport
      parentRoute: typeof rootRoute
    }
    '/ins/$insID': {
      id: '/ins/$insID'
      path: '/ins/$insID'
      fullPath: '/ins/$insID'
      preLoaderRoute: typeof InsInsIDImport
      parentRoute: typeof rootRoute
    }
    '/ins/$insID/_layout': {
      id: '/ins/$insID/_layout'
      path: '/ins/$insID'
      fullPath: '/ins/$insID'
      preLoaderRoute: typeof InsInsIDLayoutImport
      parentRoute: typeof InsInsIDRoute
    }
    '/ins/$insID/_layout/': {
      id: '/ins/$insID/_layout/'
      path: '/'
      fullPath: '/ins/$insID/'
      preLoaderRoute: typeof InsInsIDLayoutIndexImport
      parentRoute: typeof InsInsIDLayoutImport
    }
    '/ins/$insID/_layout/index/$indexUID/': {
      id: '/ins/$insID/_layout/index/$indexUID/'
      path: '/index/$indexUID'
      fullPath: '/ins/$insID/index/$indexUID'
      preLoaderRoute: typeof InsInsIDLayoutIndexIndexUIDIndexImport
      parentRoute: typeof InsInsIDLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  WarningRoute,
  InsInsIDRoute: InsInsIDRoute.addChildren({
    InsInsIDLayoutRoute: InsInsIDLayoutRoute.addChildren({
      InsInsIDLayoutIndexRoute,
      InsInsIDLayoutIndexIndexUIDIndexRoute,
    }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/warning",
        "/ins/$insID"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/warning": {
      "filePath": "warning.tsx"
    },
    "/ins/$insID": {
      "filePath": "ins/$insID",
      "children": [
        "/ins/$insID/_layout"
      ]
    },
    "/ins/$insID/_layout": {
      "filePath": "ins/$insID/_layout.tsx",
      "parent": "/ins/$insID",
      "children": [
        "/ins/$insID/_layout/",
        "/ins/$insID/_layout/index/$indexUID/"
      ]
    },
    "/ins/$insID/_layout/": {
      "filePath": "ins/$insID/_layout/index.tsx",
      "parent": "/ins/$insID/_layout"
    },
    "/ins/$insID/_layout/index/$indexUID/": {
      "filePath": "ins/$insID/_layout/index/$indexUID/index.tsx",
      "parent": "/ins/$insID/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
